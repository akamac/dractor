// Copyright (c) 2012 Dell Inc.  All rights reserved. 
// ==================================================================
// DCIM_LicensableDevice 
// ==================================================================  
[Description (
        "DCIM_LicensableDevice is a derivation of"
        "CIM_ManagedElement, and represents a"
        "device in the system that has registered"
        "with the License Manager")]
class DCIM_LicensableDevice : CIM_ManagedElement 
{   
        [Key,Description (
         "This property is usually set to the FQDD value.")]
    string InstanceID;

        [Description (
         "Defines current device state as it pertains to the license "
         "management."), 
         ValueMap { "1","2"},
         Values { "DeviceNotReady","DevicePresent"}] 
    uint32 DeviceState;
    
        [Description (
         "Defines device type."), 
         ValueMap { "0", "1", "2"},
         Values { "Internal","External", "Virtual"}]
    uint32 DeviceType;
    
        [Description (
         "The unique ID for the device to be used for binding with "
         "license(s).")]
    string UniqueID;
    
        [Description (
         "A string containing the device's unique FQDD. The field contains "
         "the device type (e.g. NIC) and location (e.g. SLOT 1)")] 
    string FQDD;
    
        [Description (
         "PCI Device ID.")]
    string DeviceID;
    
        [Description (
         "Device manufacture ID, e.g. Broadcom.")] 
    string VendorID;
    
        [Description (
         "PCI subsystem ID.")]
    string SubsystemID;
    
        [Description (
         "PCI subsystem vendor ID.")]
    string SubsystemVendorID;
    
        [Description (
         "A model description of the the device.")]
    string Model;

        [Description (
         "List of Entitlement IDs for licenses that are assigned to this device.")]    
    string LicenseList[];
    
        [Description (
         "Status message associated with the DevicePrimaryStatus.")]
    string DeviceStatusMessage;
    
        [Description (
         "MessageID associated with the DevicePrimaryStatus.")]
    string DeviceStatusMessageID;
    
        [Description (
          "DevicePrimaryStatus provides the device status value with, "
          "respect to License Management. It should be used in conjunction "
          "with DeviceStatusMessage and DeviceStatusMessageID to provide high "
          "level and detailed health status of the device."
          "DevicePrimaryStatus consists of one of the following values: Unknown, OK,"
          "Degraded or Error. \"Unknown\" indicates the implementation is in"
          "general capable of returning this property, but is unable to do so"
          "at this time. \"OK\" indicates the device is functioning "
          "normally. \"Degraded\" indicates the device is functioning"
          "below normal. \"Error\" indicates the device is in an Error"
          "condition. " ),
       ValueMap { "0", "1", "2", "3" },
       Values { "Unknown", "OK", "Degraded", "Error" }]
    uint16 DevicePrimaryStatus;
    
         [Description (
          "RollupStatus provides a high level license status value "
          "for all the sub-devices of this device. "
          "The property is a worst case accumulation of statuses, "
          "intended to align with Red-Yellow-Green type representation of status."
          "RollupStatus consists of one of the following values: Unknown, OK,"
          "Degraded or Error. \"Unknown\" indicates the implementation is unable to "
          "provide accumulative license status for the device at this time "
          "at this time. \"OK\" indicates no errors. \"Degraded\" indicates the "
          "licenses are functioning but have some errors. \"Error\" indicates "
          "the licenses are overall in an error"
          "condition. " ),
         ValueMap { "0", "1", "2", "3"},
         Values { "Unknown", "OK", "Degraded", "Error"}]    
    uint16 RollupStatus;
};
