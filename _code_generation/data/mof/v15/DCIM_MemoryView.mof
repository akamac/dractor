// Copyright (c) 2010 Dell Inc.  All rights reserved.
// ==================================================================
// DCIM_MemoryView
// ==================================================================
  [Version ( "1.0.0" ), Description(
       "DCIM_MemoryView is a derivation of CIM_View "
       "with DIMM specific data. Each instance of "
       "DCIM_MemoryView describes a DIMM in a system. " )]
class DCIM_MemoryView : DCIM_View {
      [Key, Description (
          "A string containing the Fully Qualified Device Description "
          "A user-friendly name for the object. This property allows each "
          " instance to define a user-friendly name in addition to its key "
          " properties, identity data, and description information." )]
   string InstanceID;

      [Description (
          "A string containing the Fully Qualified Device Description "
          "A user-friendly name for the object. This property allows each "
          " instance to define a user-friendly name in addition to its key "
          " properties, identity data, and description information." )]
   string FQDD;

      [Description ( 
          "The memory device type." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "24", "25" }, 
       Values { "Other", "Unknown", "DRAM", "EDRAM", "VRAM",
                "SRAM", "RAM", "ROM","Flash", "EEPROM",
            //10
                "FEPROM","EPROM", "CDRAM", "3DRAM", "SDRAM",
                "SGRAM", "RDRAM", "DDR", "DDR-2", "DDR-2-FB-DIMM",
           //20
                "DDR-3", "FBD2"}, 
       MappingStrings { "MIF.DMTF|Memory Device|005.9" }]
   uint16 MemoryType;

      [Description ( 
          "The speed of the memory device, in nano seconds." ),  
       PUnit ( "second * 10^-9" )]
   real32 Speed;

      [Description ( 
          "The total size of this memory in MegaBytes." ),  
       PUnit ( "byte * 10^6" )]
   uint32 Size;

      [Description ( 
          "A string identifying the physically labeled bank where "
          "the memory device is located - for example, \'Bank 0\' "
          "or \'Bank A\'." ), 
       MaxLen ( 64 )]
   string BankLabel;

      [Description ( 
          "The name of the organization responsible for producing "
          "the memory device. " ), 
       MaxLen ( 256 )]
   string Manufacturer;

      [Description ( 
          "A manufacturer-allocated number used to identify the "
          "memory device." ), 
       MaxLen ( 256 )]
   string SerialNumber;

      [Description ( 
          "The part number assigned by the organization that is "
          "responsible for producing or manufacturing the "
          "memory device." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalModelName" }]
   string PartNumber;

      [Description ( 
          "Boolean that indicates whether this memory device can "
          "be FRUed (TRUE) or not (FALSE)." )]
   boolean CanBeFRUed;

      [Description ( "The model of the memory device." )]
   string Model;

      [Description ( "Manufacture Date of the memory device." )]
   string ManufactureDate;

      [Description (
          "PrimaryStatus provides a high level status value, intended to "
          "align with Red-Yellow-Green type representation of status. "
          "It should be used to provide "
          "high level and detailed health status of the memory and "
          "its subcomponents. PrimaryStatus consists of one of the following "
          "values: Unknown, OK, Degraded or Error. \"Unknown\" indicates the "
          "implementation is in general capable of returning this property, "
          "but is unable to do so at this time. \"OK\" indicates the "
          "memory is functioning normally. \"Degraded\" indicates the "
          "memory is functioning below normal.\"Error\" indicates the "
          "memory is in an Error condition. " ),
       ValueMap { "0", "1", "2", "3", "0x8000", "0xFFFF" },
       Values { "Unknown", "OK", "Degraded", "Error",
               "DMTF Reserved", "Vendor Reserved" }]
   uint32 PrimaryStatus;

};
