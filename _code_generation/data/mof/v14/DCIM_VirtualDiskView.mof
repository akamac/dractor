// Copyright (c) 2010 Dell Inc.  All rights reserved.
// ==================================================================
// DCIM_VirtualDiskView
// ==================================================================
      [Description(
          "DCIM_VirtualDiskView is a derivation of DCIM_View") ]
class DCIM_VirtualDiskView : DCIM_View {
      [Key, Description (
          "A string containing the Fully Qualified Device Description "
          "A user-friendly name for the object. This property allows each "
          "instance to define a user-friendly name in addition to its key "
          "properties, identity data, and description information. "
          )]
  string InstanceID;

      [Description (
          "A string containing the Fully Qualified Device Description "
          "A user-friendly name for the object. This property allows each "
          " instance to define a user-friendly name in addition to its key "
          " properties, identity data, and description information. "
          )]
  string FQDD;   

      [Description (
          "PrimaryStatus provides a high level status value, intended to "
          "align with Red-Yellow-Green type representation of status. "
          "It should be used to provide "
          "high level and detailed health status of the virtual disk and "
          "its subcomponents. PrimaryStatus consists of one of the "
          "following values: Unknown, OK, Degraded or Error. \"Unknown\" "
          "indicates the implementation is in general capable of returning "
          "this property, but is unable to do so at this time. \"OK\" "
          "indicates the virtual disk is functioning normally. "
          "\"Degraded\" indicates the virtual disk is functioning "
          "below normal. \"Error\" indicates the virtual disk is "
          "in an Error condition. " ),
       ValueMap { "0", "1", "2", "3", "0x8000", "0xFFFF" },
       Values { "Unknown", "OK", "Degraded", "Error",
               "DMTF Reserved", "Vendor Reserved" }]
  uint32 PrimaryStatus;				

      [Description (
          "RaidTypes provides information about the RAID level that is "
          "configured on the Virtual Disk. It can have one of the following "
          "values: \"No RAID\", \"RAID0\", \"RAID1\",  "
          "\"RAID5\", \"RAID6\", "
          "\"RAID10\", \"RAID50\", \"RAID60\" "),
        ValueMap { "1", "2", "4", "64", "128", "2048", "8192", "16384" },
        Values { "No RAID", "RAID0", "RAID1", "RAID5", "RAID6","RAID10", 
                 "RAID50", "RAID60"}]
  uint32 RAIDTypes;		 

      [Description (
          "Raid status provides a status value "
   	  "RaidStatus consists of one of the following values: \"Unknown\" "
          "\"Ready\" \"Online\" \"Foreign\" \"Offline\" \"Blocked\" "
          "\"Failed\" \"Degraded\" "),
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" },
       Values { "Unknown", "Ready", "Online", "Foreign", "Offline",
                "Blocked", "Failed", "Degraded" }]
  uint32 RAIDStatus;  
  
      [Description (
       	  "Read Cache policy of the virtual disk provides information "
	  "regarding the way in which the disk cache reads data "
	  "It can have one of the following values: \"Unknown\" "
	  "\"No Read Ahead\", \"Read Ahead\", \"Adaptive\" "),
       ValueMap { "0", "16", "32", "64" },
       Values { "No Read Ahead", "Read Ahead", "Adaptive" }]
  uint32 ReadCachePolicy;

      [Description (
       	  "Write cache policy of the virtual disk provides information "
       	  "regarding the way in which the disk cache the write data"
       	  "It can have one of the following values: \"Unknown\" "
       	  "\"Write Through\", \"Write Back\", \"Write Back force\" "),
        ValueMap { "0", "1", "2", "4" },
	Values { "Write Through", "Write Back", "Write Back Force" }]
  uint32 WriteCachePolicy;

      [Description (
       	  "This is the size of the virtual disk ")]
  uint64 SizeInBytes;

      [Description (
       	  "Stripe size is the size of the stripe on a physical disk that "
       	  "contributes to the virtual disk. The stripe size can be specified "
       	  " in bytes or kilobytes or megabytes. The Stripe size can have one "
       	  "of the folllowing values: \"Default\", \"512B\", \"1KB\", \"2KB\" "
       	  "\"4KB\", \"8KB\", \"16KB\", \"32KB\", \"64KB\", \"128KB\", "
          "\"256KB\" "
       	  "\"512KB\", \"1MB\", \"2MB\", \"4MB\", \"8MB\", \"16MB\" "),
        ValueMap { "0", "1", "2", "4", "8", "16", "32", "64", "128", "256",
                    "512", "1024", "2048", "4096", "8192", "16384", "32768" },
	Values { "Default", "512B", "1KB", "2KB", "4KB", "8KB", "16KB",
		 "32KB", "64KB", "128KB", "256KB","512KB", "1MB", "2MB",
		 "4MB", "8MB", "16MB" }]
  uint32 StripeSize;

      [Description (
       	  "This property provides the name used in the "
          "system for the virtual disk. " )]
  string Name;

      [Description (
       	  "Spanlength gives the number of physical disks used in "
          "creating the virtual disk. ")]
  uint32 SpanLength;

      [Description (
       	  "This Property gives the number of spans of the physical disk that "
	  "are performed to create a virtual disk ")]
  uint32 SpanDepth;

      [Description (
       	  "Array of Fully Qualified Device Descriptors (FQDDs) " 
	  "of the Physical Disk that are used to create this virtual Disks "
	  "The array should not be empty. "),
	 ArrayType ("indexed")]
  string PhysicalDiskIDs[]; 

      [Description (
       	  "Targert ID for the virtual disk. ")]
  uint32 VirtualDiskTargetID;

      [Description (
       	  "This property gives information about the "
          "remaining redundancy of the virtual disk. " )]
  uint16 RemainingRedundancy;
  
      [Description (
       	  "Disk Cache Policy of the virtual disk "
          "provides information about caching techniques "
          "used by the Virtual Disk. The Policy dictates "
	  "how the read and write accesses to the Virtual disk are cached. "
	  "The cache policy can have one of the following values: \"Default\" "
	  "\"Enabled\" , \"Disabled\" "),
	ValueMap { "0", "256", "512", "1024" },
	Values { "Unknown", "Default", "Enabled", "Disabled" }]
  uint32 DiskCachePolicy;

      [Description (
         "This property gives information about the virtual "
         "disk configuration state"),
      ValueMap { "0", "1", "2", "3" },
      Values { "Unknown", "Current", "Pending Create", "Pending Delete" }]
  uint8 ObjectStatus;
};
